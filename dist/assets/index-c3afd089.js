(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const c of n)if(c.type==="childList")for(const s of c.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function r(n){const c={};return n.integrity&&(c.integrity=n.integrity),n.referrerPolicy&&(c.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?c.credentials="include":n.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function o(n){if(n.ep)return;n.ep=!0;const c=r(n);fetch(n.href,c)}})();const DATA_BINDING_STRING="data-element-binding";function prepare(e){var o;const t=(n,c)=>`<span ${DATA_BINDING_STRING}=${c}></span>`,r=(o=e.innerHTML)==null?void 0:o.replace(/\{\{(.*)\}\}/g,t);e.innerHTML=r}function update$3(e){Array.from(document.querySelectorAll(`[${DATA_BINDING_STRING}]`)).forEach(r=>{const o=e.get(r.dataset.elementBinding);o&&(r.textContent=o)})}const BINDINGS=[{selector:"[\\@click]",attribute:"@click",events:["click"]},{selector:"[\\@input]",attribute:"@input",events:["change","keyup"]},{selector:"[\\@change]",attribute:"@change",events:["change"]},{selector:"[\\@keyup]",attribute:"@keyup",events:["keyup"]},{selector:"[\\@keydown]",attribute:"@keydown",events:["keydown"]},{selector:"[\\@focus]",attribute:"@focus",events:["focus"]},{selector:"[\\@blur]",attribute:"@blur",events:["blur"]}],executeExpression=(el,proxy,funcs,attribute)=>{const expression=el.attributes[attribute].value;eval(expression)},bind$1=(e,t,r)=>{const o=(n,c,s)=>{Array.from(r.querySelectorAll(n)).forEach(a=>{a.addEventListener(s,executeExpression.bind(globalThis,a,e,t,c))})};BINDINGS.forEach(({selector:n,attribute:c,events:s})=>{s.forEach(a=>{o(n,c,a)})})},getElements=e=>Array.from(document.querySelectorAll(e)),createUid=()=>`${Math.round(Math.random()*1e13)}${Math.round(Math.random()*1e13)}`,SELECTOR="[r-model]",ATTRIBUTE="r-model",update$2=(e,t,r)=>{const o=e.attributes[r].value.replace("proxy.","");let n=e.value;n=Number(n)?Number(n):n,t[o]=n},bind=e=>{const t=(r,o,n)=>{getElements(r).forEach(c=>c.addEventListener(n,update$2.bind(globalThis,c,e,o)))};t(SELECTOR,ATTRIBUTE,"change"),t(SELECTOR,ATTRIBUTE,"keyup")},updateCompute=(e,t)=>{Object.entries(t).forEach(([r,o])=>{e.set(r,o())})},VALUE_SELECTOR="[\\:value]",VALUE_ATTRIBUTE=":value",MODEL_SELECTOR="[r-model]",MODEL_ATTRIBUTE="r-model",update$1=(e,t,r)=>{getElements(t).forEach(o=>{const n=o.attributes[r].value.replace("proxy.",""),c=e.get(n);o.value=c})},updateInput=e=>{update$1(e,VALUE_SELECTOR,VALUE_ATTRIBUTE)},updateModel=e=>{update$1(e,MODEL_SELECTOR,MODEL_ATTRIBUTE)},FOR_SELECTOR="[r-for]",FOR_ATTRIBUTE="r-for",FOR_KEY="r-for-key",rForMap=new Map,getParsedTemplate=(e,t,r,o)=>{const n=o.attributes[FOR_KEY].value,c=rForMap.get(n);let s="";if(!(c.children.length===1&&!c.children[0].dataset.elementBinding)){console.warn("The r-for must contain one and only one child element");return}if(t.toLowerCase()=="of"){for(const u of r)if(u){let i=c.children[0].cloneNode(!0);Array.from(i.querySelectorAll(`[${DATA_BINDING_STRING}="${e}"]`)).forEach(p=>{p.textContent=u}),s+=i.outerHTML}}return s},update=e=>{getElements(FOR_SELECTOR).forEach(t=>{const r=t.attributes[FOR_ATTRIBUTE].value.replace("proxy.",""),[o,n,c]=r.split(" "),s=e.get(c);if(!t.attributes[FOR_KEY]){const a=createUid();t.setAttribute(FOR_KEY,a),rForMap.set(a,t.cloneNode(!0))}t.innerHTML="",s&&(t.innerHTML=getParsedTemplate(o,n,s,t))})};function render(e,t){t&&Object.entries(t).length&&updateCompute(e,t),updateInput(e),updateModel(e),update$3(e),update(e)}function Reactive(e){const t={set(r,o,n){return r.set(o,n),render(r,e),!0},get(r,o){return r.get(o)}};return new Proxy(new Map,t)}function createFuncProxy(e){return new Proxy({},{set(t,r,o){if(typeof o!="function")throw new Error(`Argument ${r} has to be of type function`);return t[r]=o.bind(e,e),!0}})}function Raccoon(e){this.compute={};const t=new Reactive(this.compute);return this.funcs=createFuncProxy(t),prepare(e),bind$1(t,this.funcs,e),bind(t),{compute:this.compute,proxy:t,funcs:this.funcs}}const appEl=document.getElementById("demo-component-1"),{proxy:proxy$1,compute:compute$1,funcs:funcs$1}=new Raccoon(appEl);proxy$1.price=5;proxy$1.quantity=15;proxy$1.tax=25;proxy$1.names=["Frank","Lisa","Peter","Amanda"];proxy$1.users=[];compute$1.sum=()=>proxy$1.price*proxy$1.quantity;compute$1.total=()=>proxy$1.price*proxy$1.quantity+proxy$1.tax;funcs$1.getUsers=(e,t)=>{fetch("https://dummyjson.com/users").then(r=>r.json()).then(r=>{e.users=r.users.map(o=>o.firstName)})};const componentEl=document.getElementById("demo-component-2"),{proxy,compute,funcs}=new Raccoon(componentEl);proxy.price=1;proxy.quantity=15;proxy.tax=.01;compute.sum=()=>proxy.price*proxy.quantity+100*proxy.tax;compute.taxHuman=()=>`${100*proxy.tax}%`;funcs.addOnePercentTax=()=>proxy.tax+=.01;const main="";
